{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Task 2\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport AdminLogin from './AdminLogin';\nimport UserLogin from './UserLogin';\nimport s from './login.module.css';\nimport '../App.css';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n//-----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // let [isAdmin, setIsAdmin] = useState(true)\n  // let [isBtnClicked, setIsBtnClicked] = useState(false)\n  let btn1 = useRef();\n  // let btn2 = useRef()\n  //-----\n  useEffect(() => {\n    btn1.current.style = \"background-color: var(--btn)\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainLoginBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: btn1,\n        id: s.btn,\n        onClick: () => {\n          setIsAdmin(true);\n          setIsBtnClicked(true);\n          btn1.current.style = \"background-color: var(--btn)\";\n          btn2.current.style = \"background-color: var(--subbg)\";\n        },\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: btn2,\n        id: s.btn,\n        onClick: () => {\n          setIsAdmin(false);\n          setIsBtnClicked(false);\n          btn2.current.style = \"background-color: var(--btn)\";\n          btn1.current.style = \"background-color: var(--subbg)\";\n        },\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: isAdmin ? /*#__PURE__*/_jsxDEV(UserLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(AdminLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"IaRwlEn6qkQbWs3DIToJX4iWatg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","AdminLogin","UserLogin","s","useRef","useEffect","Login","btn1","current","style","btn","setIsAdmin","setIsBtnClicked","btn2","isAdmin"],"sources":["C:/Users/hrush/Desktop/Task 2/frontend/src/components/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport AdminLogin from './AdminLogin'\r\nimport UserLogin from './UserLogin'\r\nimport s from './login.module.css'\r\nimport '../App.css'\r\nimport { useRef } from 'react'\r\nimport { useEffect } from 'react'\r\n//-----\r\n\r\nfunction Login() {\r\n\r\n    // let [isAdmin, setIsAdmin] = useState(true)\r\n    // let [isBtnClicked, setIsBtnClicked] = useState(false)\r\n    let btn1 = useRef()\r\n    // let btn2 = useRef()\r\n    //-----\r\n    useEffect(()=>{\r\n        btn1.current.style =\"background-color: var(--btn)\"; \r\n    },[])\r\n\r\n    return (\r\n        <div className='mainLoginBox'>\r\n            <div className='buttons'>\r\n                <button ref={btn1}\r\n                    id={s.btn}\r\n                    onClick={() => {\r\n                        setIsAdmin(true)\r\n                        setIsBtnClicked(true)\r\n                        btn1.current.style =\"background-color: var(--btn)\"; \r\n                        btn2.current.style=\"background-color: var(--subbg)\";\r\n                    }}>User Login</button>\r\n\r\n                <button ref={btn2}\r\n                    id={s.btn}\r\n                    onClick={() => {\r\n                        setIsAdmin(false)\r\n                        setIsBtnClicked(false)\r\n                        btn2.current.style =\"background-color: var(--btn)\"; \r\n                        btn1.current.style=\"background-color: var(--subbg)\";\r\n                    }}>Admin Login</button>\r\n            </div>\r\n\r\n            <div className='login'>\r\n                {isAdmin ? <UserLogin /> : <AdminLogin />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,CAAC,MAAM,oBAAoB;AAClC,OAAO,YAAY;AACnB,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,SAAS,QAAQ,OAAO;AACjC;AAAA;AAEA,SAASC,KAAK,GAAG;EAAA;EAEb;EACA;EACA,IAAIC,IAAI,GAAGH,MAAM,EAAE;EACnB;EACA;EACAC,SAAS,CAAC,MAAI;IACVE,IAAI,CAACC,OAAO,CAACC,KAAK,GAAE,8BAA8B;EACtD,CAAC,EAAC,EAAE,CAAC;EAEL,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAQ,GAAG,EAAEF,IAAK;QACd,EAAE,EAAEJ,CAAC,CAACO,GAAI;QACV,OAAO,EAAE,MAAM;UACXC,UAAU,CAAC,IAAI,CAAC;UAChBC,eAAe,CAAC,IAAI,CAAC;UACrBL,IAAI,CAACC,OAAO,CAACC,KAAK,GAAE,8BAA8B;UAClDI,IAAI,CAACL,OAAO,CAACC,KAAK,GAAC,gCAAgC;QACvD,CAAE;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,eAE1B;QAAQ,GAAG,EAAEI,IAAK;QACd,EAAE,EAAEV,CAAC,CAACO,GAAI;QACV,OAAO,EAAE,MAAM;UACXC,UAAU,CAAC,KAAK,CAAC;UACjBC,eAAe,CAAC,KAAK,CAAC;UACtBC,IAAI,CAACL,OAAO,CAACC,KAAK,GAAE,8BAA8B;UAClDF,IAAI,CAACC,OAAO,CAACC,KAAK,GAAC,gCAAgC;QACvD,CAAE;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB,eAEN;MAAK,SAAS,EAAC,OAAO;MAAA,UACjBK,OAAO,gBAAG,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GAvCQR,KAAK;AAAA,KAALA,KAAK;AAyCd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}