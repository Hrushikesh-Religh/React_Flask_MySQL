{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Task 2\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport AdminLogin from './AdminLogin';\nimport UserLogin from './UserLogin';\nimport s from './login.module.css';\nimport '../App.css';\nimport { useRef } from 'react';\n//-----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  let [isAdmin, setIsAdmin] = useState(true);\n  let [isBtnClicked, setIsBtnClicked] = useState(false);\n  let btn1 = useRef();\n  let btn2 = useRef();\n  //-----\n  function btnStyle() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainLoginBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: btn1,\n        id: s.btn,\n        onClick: () => {\n          setIsAdmin(true);\n          setIsBtnClicked(true);\n          btnStyle();\n        },\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: btn2,\n        id: s.btn,\n        onClick: () => {\n          setIsAdmin(false);\n          setIsBtnClicked(false);\n          btnStyle();\n        },\n        children: \"Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: isAdmin ? /*#__PURE__*/_jsxDEV(UserLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(AdminLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"0pde5oS6qlsLPgywbyd/gMnZzao=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","AdminLogin","UserLogin","s","useRef","Login","isAdmin","setIsAdmin","isBtnClicked","setIsBtnClicked","btn1","btn2","btnStyle","btn"],"sources":["C:/Users/hrush/Desktop/Task 2/frontend/src/components/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport AdminLogin from './AdminLogin'\r\nimport UserLogin from './UserLogin'\r\nimport s from './login.module.css'\r\nimport '../App.css'\r\nimport { useRef } from 'react'\r\n//-----\r\n\r\nfunction Login() {\r\n\r\n    let [isAdmin, setIsAdmin] = useState(true)\r\n    let [isBtnClicked, setIsBtnClicked] = useState(false)\r\n    let btn1 = useRef()\r\n    let btn2 = useRef()\r\n    //-----\r\n    function btnStyle(){\r\n        \r\n    }\r\n    return (\r\n        <div className='mainLoginBox'>\r\n            <div className='buttons'>\r\n                <button ref={btn1}\r\n                    id={s.btn}\r\n                    onClick={() => {\r\n                        setIsAdmin(true)\r\n                        setIsBtnClicked(true)\r\n                        btnStyle()\r\n                    }}>User</button>\r\n\r\n                <button ref={btn2}\r\n                    id={s.btn}\r\n                    onClick={() => {\r\n                        setIsAdmin(false)\r\n                        setIsBtnClicked(false)\r\n                        btnStyle()\r\n                    }}>Admin</button>\r\n            </div>\r\n\r\n            <div className='login'>\r\n                {isAdmin ? <UserLogin /> : <AdminLogin />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,CAAC,MAAM,oBAAoB;AAClC,OAAO,YAAY;AACnB,SAASC,MAAM,QAAQ,OAAO;AAC9B;AAAA;AAEA,SAASC,KAAK,GAAG;EAAA;EAEb,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,IAAI,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,IAAIU,IAAI,GAAGN,MAAM,EAAE;EACnB,IAAIO,IAAI,GAAGP,MAAM,EAAE;EACnB;EACA,SAASQ,QAAQ,GAAE,CAEnB;EACA,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAQ,GAAG,EAAEF,IAAK;QACd,EAAE,EAAEP,CAAC,CAACU,GAAI;QACV,OAAO,EAAE,MAAM;UACXN,UAAU,CAAC,IAAI,CAAC;UAChBE,eAAe,CAAC,IAAI,CAAC;UACrBG,QAAQ,EAAE;QACd,CAAE;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAEpB;QAAQ,GAAG,EAAED,IAAK;QACd,EAAE,EAAER,CAAC,CAACU,GAAI;QACV,OAAO,EAAE,MAAM;UACXN,UAAU,CAAC,KAAK,CAAC;UACjBE,eAAe,CAAC,KAAK,CAAC;UACtBG,QAAQ,EAAE;QACd,CAAE;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB,eAEN;MAAK,SAAS,EAAC,OAAO;MAAA,UACjBN,OAAO,gBAAG,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GApCQD,KAAK;AAAA,KAALA,KAAK;AAsCd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}